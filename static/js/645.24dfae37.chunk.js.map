{"version":3,"file":"static/js/645.24dfae37.chunk.js","mappings":"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","sources":["../node_modules/emailjs-com/es/store/store.js","../node_modules/emailjs-com/es/utils/validateParams.js","../node_modules/emailjs-com/es/models/EmailJSResponseStatus.js","../node_modules/emailjs-com/es/api/sendPost.js","../node_modules/emailjs-com/es/index.js","../node_modules/emailjs-com/es/methods/send/send.js","Components/ContactForm.jsx","Components/Modal.jsx","Components/Contact.jsx"],"sourcesContent":["export const store = {\n    _origin: 'https://api.emailjs.com',\n};\n","export const validateParams = (userID, serviceID, templateID) => {\n    if (!userID) {\n        throw 'The user ID is required. Visit https://dashboard.emailjs.com/admin/integration';\n    }\n    if (!serviceID) {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID) {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n    return true;\n};\n","export class EmailJSResponseStatus {\n    constructor(httpResponse) {\n        this.status = httpResponse.status;\n        this.text = httpResponse.responseText;\n    }\n}\n","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = (url, data, headers = {}) => {\n    return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.addEventListener('load', ({ target }) => {\n            const responseStatus = new EmailJSResponseStatus(target);\n            if (responseStatus.status === 200 || responseStatus.text === 'OK') {\n                resolve(responseStatus);\n            }\n            else {\n                reject(responseStatus);\n            }\n        });\n        xhr.addEventListener('error', ({ target }) => {\n            reject(new EmailJSResponseStatus(target));\n        });\n        xhr.open('POST', store._origin + url, true);\n        Object.keys(headers).forEach((key) => {\n            xhr.setRequestHeader(key, headers[key]);\n        });\n        xhr.send(data);\n    });\n};\n","import { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm };\nexport default {\n    init,\n    send,\n    sendForm,\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\n/**\n * Send a template to the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {object} templatePrams - the template params, what will be set to the EmailJS template\n * @param {string} userID - the EmailJS user ID\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const send = (serviceID, templateID, templatePrams, userID) => {\n    const uID = userID || store._userID;\n    validateParams(uID, serviceID, templateID);\n    const params = {\n        lib_version: '3.2.0',\n        user_id: uID,\n        service_id: serviceID,\n        template_id: templateID,\n        template_params: templatePrams,\n    };\n    return sendPost('/api/v1.0/email/send', JSON.stringify(params), {\n        'Content-type': 'application/json',\n    });\n};\n","\nimport React, { useState } from \"react\";\nimport emailjs from \"emailjs-com\";\n\nconst ContactForm = ({ onModalOpen, onModalUpdate }) => {\n  const [formData, setFormData] = useState({ name: \"\", email: \"\", message: \"\" });\n  const [isFormFilled, setIsFormFilled] = useState(false); // State to track if any field is filled\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({ ...formData, [name]: value });\n\n    // Check if any field is filled to toggle the Reset button visibility\n    setIsFormFilled(Object.values(formData).some((field) => field !== \"\"));\n  };\n\n  const handleReset = () => {\n    setFormData({ name: \"\", email: \"\", message: \"\" });\n    setIsFormFilled(false); // Hide reset button after reset\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    onModalOpen({\n      isConfirmation: true,\n      message: \"Are you sure you want to send the message?\",\n      onConfirm: async () => {\n        onModalUpdate({ isLoading: true });\n\n        let sentEmails = 0; // Counter to track successfully sent emails\n\n        try {\n          const templateParams = {\n            name: formData.name,\n            email: formData.email,\n            message: formData.message,\n          };\n\n          // Send the first email to Surabhi\n          await emailjs.send( \"service_jlh8sf5\",\n                         \"template_h7xt0ln\",\n                         templateParams,\n                         \"GMIcmFm0oikgPgsas\").then(\n            (response) => {\n              if (response.status === 200 && response.text === \"OK\") {\n                sentEmails++;\n              }\n            }\n          );\n\n          // Send the second email to visitors\n          await emailjs.send( \"service_jlh8sf5\",\n                        \"template_fkpw8sa\",\n                        templateParams,\n                        \"GMIcmFm0oikgPgsas\").then(\n            (response) => {\n              if (response.status === 200 && response.text === \"OK\") {\n                sentEmails++;\n              }\n            }\n          );\n\n          // Check if both emails were sent successfully\n          if (sentEmails === 2) {\n            onModalUpdate({\n              isLoading: false,\n              isConfirmation: false,\n              message: {\n                title: \"Success\",\n                body: \"Your message has been sent successfully!\",\n              },\n            });\n\n            setFormData({ name: \"\", email: \"\", message: \"\" });\n          } else {\n            throw new Error(\"One or more emails failed to send\");\n          }\n        } catch (error) {\n          onModalUpdate({\n            isLoading: false,\n            isConfirmation: false,\n            message: {\n              title: \"Error\",\n              body: \"Something went wrong. Please try again.\",\n            },\n          });\n        }\n      },\n    });\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <label htmlFor=\"name\">Name:</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          name=\"name\"\n          value={formData.name}\n          onChange={handleChange}\n          required\n          placeholder=\"Full name\"\n        />\n      </div>\n\n      <div>\n        <label htmlFor=\"email\">Email:</label>\n        <input\n          type=\"email\"\n          id=\"email\"\n          name=\"email\"\n          value={formData.email}\n          onChange={handleChange}\n          required\n          placeholder=\"name@example.com\"\n        />\n      </div>\n\n      <div>\n        <label htmlFor=\"message\">Message:</label>\n        <textarea\n          id=\"message\"\n          name=\"message\"\n          value={formData.message}\n          onChange={handleChange}\n          required\n          placeholder=\"Drop a message\"\n        />\n      </div>\n\n      <div  className=\"form-btns\">\n        <button type=\"submit\">Send</button>\n        {isFormFilled && (\n          <button type=\"button\" onClick={handleReset}>\n            Reset\n          </button>\n        )}\n      </div>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","\nimport React, { useContext } from \"react\";\nimport \"../Css/Modal.css\";\nimport { ThemeContext } from \"./ThemeContext\";\n\nconst Modal = ({ message, isLoading, isConfirmation, onConfirm, onClose }) => {\n  const { isDarkMode } = useContext(ThemeContext);\n  const themeClass = isDarkMode === true ? \"dark\" : \"light\";\n  const className = message.title\n    ? `${message.title.toLowerCase()}-message ${themeClass}`\n    : \"default\";\n\n  if (!message || !onClose || (isConfirmation && !onConfirm)) {\n    return <h1>Something went wrong</h1>;\n  }\n\n  // Determine text color based on message type\n\n  const messageColor =\n    message.title === \"Success\"\n      ? \"green\" \n      : message.title === \"Error\"\n      ? \"red\" \n      : \"inherit\"; \n\n  return (\n    <div className={`modal-overlay ${themeClass}`}>\n      <div className={`modal-content ${themeClass}`}>\n        {isLoading ? (\n          <h3>Sending...</h3>\n        ) : isConfirmation ? (\n          <div className={`confirm ${themeClass}`}>\n            <h3>Please Confirm</h3>\n            <p>{message}</p>\n            <div className={`option-btn ${themeClass}`}>\n              <button onClick={onConfirm}>Yes</button>\n              <button onClick={onClose}>No</button>\n            </div>\n          </div>\n        ) : (\n          <>\n            <h3 className={className} style={{ color: messageColor }}>\n              {message.title}\n            </h3>\n            <p className={className} style={{ color: messageColor }}>\n              {message.body}\n            </p>\n            <button onClick={onClose}>Close</button>\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React, { useState , useContext} from \"react\";\nimport ContactForm from \"./ContactForm\";\nimport Modal from \"./Modal\";\nimport { FaEnvelope, FaLinkedin, FaMapMarkerAlt } from \"react-icons/fa\";\nimport { Fade } from \"react-awesome-reveal\";\nimport \"../Css/Contact.css\";\nimport { ThemeContext } from \"./ThemeContext\";\n\nconst Contact = () => {\n  const {isDarkMode} = useContext(ThemeContext)\n  const themeClass = isDarkMode ? \"dark\" : \"light\"\n  const [modalData, setModalData] = useState({\n    show: false,\n    isLoading: false,\n    isConfirmation: false,\n    message: \"\",\n  });\n\n  const handleModalOpen = (data) => {\n    setModalData({ ...data, show: true });\n  };\n\n  const handleModalUpdate = (data) => {\n    setModalData((prev) => ({ ...prev, ...data }));\n  };\n\n  const handleModalClose = () => {\n    setModalData({ show: false, isLoading: false, isConfirmation: false, message: \"\" });\n  };\n\n  return (\n    <Fade duration={1500} cascade>\n      <div className={`contact-container ${themeClass}`}>\n        <h2>Contact & Collaborate</h2>\n\n        <div className={`form-section ${themeClass}`}>\n          <h3>Send a Message</h3>\n          <ContactForm\n            onModalOpen={handleModalOpen}\n            onModalClose={handleModalClose}\n            onModalUpdate={handleModalUpdate}\n          />\n        </div>\n\n        <div className={`info-section ${themeClass}`}>\n          <h3>Contact Information</h3>\n          <p>\n            <FaEnvelope /> <strong>Email:</strong> surabhisinha514@gmail.com\n          </p>\n          <p>\n            <FaLinkedin /> <strong>LinkedIn:</strong>{\" \"}\n            <a href= \"https://linkedin.com/in/thisissurabhisinha\" target=\"_blank\" rel=\"noreferrer\">\n              <strong>thisissurabhisinha</strong>\n            </a>\n          </p>\n          <p>\n            <FaMapMarkerAlt /> <strong>Address:</strong> Uttar Pradesh , India\n          </p>\n        </div>\n\n        {modalData.show && (\n          <Modal\n            message={modalData.message}\n            isLoading={modalData.isLoading}\n            isConfirmation={modalData.isConfirmation}\n            onConfirm={modalData.onConfirm}\n            onClose={handleModalClose}\n          />\n        )}\n      </div>\n    </Fade>\n  );\n};\n\nexport default Contact;\n"],"names":["store","_origin","validateParams","userID","serviceID","templateID","EmailJSResponseStatus","constructor","httpResponse","this","status","text","responseText","sendPost","url","data","headers","arguments","length","undefined","Promise","resolve","reject","xhr","XMLHttpRequest","addEventListener","_ref","target","responseStatus","_ref2","open","Object","keys","forEach","key","setRequestHeader","send","templatePrams","uID","_userID","params","lib_version","user_id","service_id","template_id","template_params","JSON","stringify","onModalOpen","onModalUpdate","formData","setFormData","useState","name","email","message","isFormFilled","setIsFormFilled","handleChange","e","value","_objectSpread","values","some","field","_jsxs","onSubmit","async","preventDefault","isConfirmation","onConfirm","isLoading","sentEmails","templateParams","emailjs","then","response","Error","title","body","error","children","_jsx","htmlFor","type","id","onChange","required","placeholder","className","onClick","handleReset","onClose","isDarkMode","useContext","ThemeContext","themeClass","concat","toLowerCase","messageColor","_Fragment","style","color","Contact","modalData","setModalData","show","handleModalClose","Fade","duration","cascade","ContactForm","onModalClose","prev","FaEnvelope","FaLinkedin","href","rel","FaMapMarkerAlt","Modal"],"sourceRoot":""}